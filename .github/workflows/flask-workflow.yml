name: Deploy Flask App

on:
  workflow_dispatch:

env:
  AWS_REGION: me-central-1
  EKS_CLUSTER_NAME: EKS-test
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_TEST }}  
  ECR_REPOSITORY: flask-dev-repo   
  
permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Instal envsubst
      run: |
        sudo apt-get install gettext-base
   
    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: v1.28.3
      id: install 

    
    - name: Debug Kubeconfig
      run: |
        echo "Kubeconfig Content:"
        echo "${{ secrets.KUBE_CONFIG_DATA_TEST}}"
    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: me-central-1

    - name: Update kubeconfig
      run: aws eks --region me-central-1 update-kubeconfig --name EKS-test      

    - name: Login to Amazon ECR    
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

    - name: Deploy to Kubernetes Cluster
      env:
        AWS_REGION: me-central-1
        EKS_CLUSTER_NAME: EKS-test
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_TEST }}
        ECR_REPOSITORY: flask-dev-repo
        AWS_DEFAULT_REGION: me-central-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        IMAGE_TAG: ${{ github.sha }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        cat k8s/flask-deployment.yml | envsubst | kubectl apply -f -
        cat k8s/flask-service.yml | envsubst | kubectl apply -f - 
        cat k8s/flask-ingress.yaml | envsubst | kubectl apply -f -
        